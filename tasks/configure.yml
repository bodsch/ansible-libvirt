---

- name: merge libvirt config configuration between defaults and custom
  ansible.builtin.set_fact:
    libvirt_libvirtd: "{{ libvirt_defaults_libvirtd | combine(libvirt_libvirtd, recursive=True) }}"
    libvirt_qemu: "{{ libvirt_defaults_qemu | combine(libvirt_qemu, recursive=True) }}"
    libvirt_network: "{{ libvirt_defaults_network | combine(libvirt_network, recursive=True) }}"

- name: create sysconf directory
  ansible.builtin.file:
    state: directory
    path: "{{ libvirt_sysconf_directory }}"
    mode: u=rw,g=r,o=r

- name: create system libvirtd config
  become: true
  ansible.builtin.template:
    src: "{{ libvirt_sysconf_directory[1:] }}/libvirtd.j2"
    dest: "{{ libvirt_sysconf_directory }}/libvirtd"
    owner: root
    group: root
    mode: u=rw,g=r,o=r
    backup: true
  notify:
    - restart {{ libvirt_service.name }}

- name: create libvirtd.conf
  become: true
  ansible.builtin.template:
    src: etc/libvirt/libvirtd.conf.j2
    dest: /etc/libvirt/libvirtd.conf
    owner: root
    group: root
    mode: u=rw,g=r,o=r
    backup: true
  notify:
    - restart {{ libvirt_service.name }}

- name: create network.conf
  become: true
  ansible.builtin.template:
    src: etc/libvirt/network.conf.j2
    dest: /etc/libvirt/network.conf
    owner: root
    group: root
    mode: u=rw,g=r,o=r
    backup: true
  notify:
    - restart {{ libvirt_service.name }}

- name: create qemu.conf
  become: true
  ansible.builtin.template:
    src: etc/libvirt/qemu.conf.j2
    dest: /etc/libvirt/qemu.conf
    owner: root
    group: root
    mode: u=rw,g=r,o=r
    backup: true
  notify:
    - restart {{ libvirt_service.name }}

- name: enable / disable libvirtd-tcp.socket
  become: true
  ansible.builtin.service:
    name: libvirtd-tcp.socket
    enabled: "{{ 'true' if libvirt_libvirtd.enable_tcp else 'false' }}"
  failed_when: false
  notify:
    - restart libvirtd-tcp.socket
  when:
    - not ansible_check_mode
    - ansible_service_mgr | lower == "systemd"
    # - ansible_distribution | lower == "debian"
    # - not ansible_distribution_major_version == 10

- name: enable / disable libvirtd-tls.socket
  become: true
  ansible.builtin.service:
    name: libvirtd-tls.socket
    enabled: "{{ 'true' if libvirt_libvirtd.enable_tls else 'false' }}"
  failed_when: false
  notify:
    - restart libvirtd-tls.socket
  when:
    - not ansible_check_mode
    - ansible_service_mgr | lower == "systemd"
    # - ansible_distribution | lower == "debian"
    # - not ansible_distribution_major_version == 10

- name: flush handlers
  ansible.builtin.meta: flush_handlers

- name: wait for running libvirtd
  ansible.builtin.wait_for:
    path: /run/libvirtd.pid
    state: present
    msg: Timeout to find file /run/libvirtd.pid

- name: configure networks
  ansible.builtin.include_tasks: configure/libvirt_networks.yml
  when:
    - libvirt_virtual_networks is defined
    - libvirt_virtual_networks | count > 0

- name: configure storage pools
  ansible.builtin.include_tasks: configure/libvirt_storage_pools.yml
  when:
    - libvirt_storage_pools is defined
    - libvirt_storage_pools | count > 0

...
