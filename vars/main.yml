---

libvirt_dependecies: []

libvirt_packages:
  - libvirt

libvirt_service:
  name: libvirtd

libvirt_defaults_libvirtd:
  # - network
  enable_tls: false
  enable_tcp: false
  tls_port: 16514
  tcp_port: 16509
  listen_addr: "127.0.0.1"    # 192.168.0.1
  enable_mdns: false
  # - socket
  unix_sock_group: "libvirt"     # libvirt
  unix_sock_ro_perms: ""  # 0777
  unix_sock_rw_perms: ""  # 0770
  unix_sock_admin_perms: ""  # 0770
  unix_sock_dir: "/run/libvirt"       # /run/libvirt
  # - authentication
  #  - none
  #  - sasl
  #  - polkit
  auth_unix_ro: ""        # polkit
  auth_unix_rw: ""        # polkit
  #auth_tcp = "sasl"
  #auth_tls = "none"
  #tcp_min_ssf = 112
  #access_drivers = [ "polkit" ]
  # - TLS x509 certificate configuration
  #key_file = "/etc/pki/libvirt/private/serverkey.pem"
  #cert_file = "/etc/pki/libvirt/servercert.pem"
  #ca_file = "/etc/pki/CA/cacert.pem"
  #crl_file = "/etc/pki/CA/crl.pem"
  # - Authorization controls
  # tls_no_sanity_certificate = 1
  # tls_no_verify_certificate = 1
  # tls_allowed_dn_list = ["DN1", "DN2"]
  # tls_priority="NORMAL"
  # sasl_allowed_username_list = ["joe@EXAMPLE.COM", "fred@EXAMPLE.COM" ]
  # - Processing controls
  max_clients: 5000              # 5000
  max_queued_clients: 1000       # 1000
  max_anonymous_clients: 20      # 20
  min_workers: 5                 # 5
  max_workers: 20                # 20
  prio_workers: 5                # 5
  max_requests: ""               # ?
  max_client_requests: 5         # 5
  admin_min_workers: 1           # 1
  admin_max_workers: 5           # 5
  admin_max_clients: 5           # 5
  admin_max_queued_clients: 5    # 5
  admin_max_client_requests: 5   # 5
  # - Logging controls
  #    1: DEBUG
  #    2: INFO
  #    3: WARNING
  #    4: ERROR
  log_level: 3
  log_filters: []
  #   - 3:remote
  #   - 4:event
  #   - 4:json

  # ="1:qemu 1:libvirt 4:object 4:json 4:event 1:util"
  # Logging outputs:
  # An output is one of the places to save logging information
  # The format for an output can be:
  #    level:stderr
  #      output goes to stderr
  #    level:syslog:name
  #      use syslog for the output and use the given name as the ident
  #    level:file:file_path
  #      output to a file, with the given filepath
  #    level:journald
  #      output to journald logging system
  # In all cases 'level' is the minimal priority, acting as a filter
  #    1: DEBUG
  #    2: INFO
  #    3: WARNING
  #    4: ERROR
  log_outputs: []
  #   - "3:syslog:libvirtd"
  #   - "4:livirtd.log:/var/log/libvirt"
  #   - "3:syslog:libvirtd"

  # - auditing                    #
  #   audit_level == 0  -> disable all auditing
  #   audit_level == 1  -> enable auditing, only if enabled on host (default)
  #   audit_level == 2  -> enable auditing, and exit if disabled on host
  #
  audit_level: 1
  #
  # If set to 1, then audit messages will also be sent
  # via libvirt logging infrastructure. Defaults to 0
  #
  audit_logging: false
  # - UUID of the host
  #host_uuid = "00000000-0000-0000-0000-000000000000"
  #host_uuid_source = "smbios"
  # - Keepalive protocol          #
  keepalive_interval: ""          # 5
  keepalive_count: ""             # 5
  admin_keepalive_interval: ""    # 5
  admin_keepalive_count: ""       # 5
  # - Open vSwitch
  ovs_timeout: ""                 # 5


libvirt_defaults_qemu:
# The default security driver is SELinux. If SELinux is disabled
# on the host, then the security driver will automatically disable
# itself. If you wish to disable QEMU SELinux security driver while
# leaving SELinux enabled for the host in general, then set this
# to 'none' instead. It's also possible to use more than one security
# driver at the same time, for this use a list of names separated by
# comma and delimited by square brackets. For example:
#       security_driver = [ "selinux", "apparmor" ]
#
# Notes: The DAC security driver is always enabled; as a result, the
# value of security_driver cannot contain "dac".  The value "none" is
# a special value; security_driver can be set to that value in
# isolation, but it cannot appear in a list of drivers.
#
#security_driver = "selinux"
  security_drivers:
    - "apparmor"

...
