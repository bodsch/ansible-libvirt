
{% if libvirt_qemu.nbd is defined and
      libvirt_qemu.nbd | count > 0 %}
  {% if libvirt_qemu.nbd.tls is defined and
        libvirt_qemu.nbd.tls | string | length > 0 %}
nbd_tls                       = {{ libvirt_qemu.nbd.tls | bool | ternary('1', '0') }}
  {% endif %}
  {% if libvirt_qemu.nbd.tls_x509_cert_dir is defined and
        libvirt_qemu.nbd.tls_x509_cert_dir | string | length > 0 %}
nbd_tls_x509_cert_dir         = "{{ libvirt_qemu.nbd.tls_x509_cert_dir }}"
  {% endif %}
  {% if libvirt_qemu.nbd.tls_x509_secret_uuid is defined and
        libvirt_qemu.nbd.tls_x509_secret_uuid | string | length > 0 %}
nbd_tls_x509_secret_uuid      = "{{ libvirt_qemu.nbd.tls_x509_secret_uuid }}"
  {% endif %}
{% endif %}
{#
# Enable use of TLS encryption for all NBD disk devices that don't
# specifically disable it.
#
# When the NBD server is set up appropriately, x509 certificates are required
# for authentication between the client and the remote NBD server.
#
# It is necessary to setup CA and issue the client certificate before
# enabling this.
#
#nbd_tls = 1


# In order to override the default TLS certificate location for NBD
# backed storage, supply a valid path to the certificate directory.
# This is used to authenticate the NBD block device clients to the NBD
# server.
#
# If the provided path does not exist, libvirtd will fail to start.
# If the path is not provided, but nbd_tls = 1, then the
# default_tls_x509_cert_dir path will be used.
#
# NBD block device clients expect the client certificate and key to be
# present in the certificate directory along with the CA certificate.
# Since this is only a client the server-key.pem certificate is not needed.
# Thus a NBD directory must contain the following:
#
#  ca-cert.pem - the CA master certificate
#  client-cert.pem - the client certificate signed with the ca-cert.pem
#  client-key.pem - the client private key
#
#nbd_tls_x509_cert_dir = "/etc/pki/libvirt-nbd"


# Uncomment and use the following option to override the default secret
# UUID provided in the default_tls_x509_secret_uuid parameter.
#
# NB This default all-zeros UUID will not work. Replace it with the
# output from the UUID for the TLS secret from a 'virsh secret-list'
# command and then uncomment the entry
#
#nbd_tls_x509_secret_uuid = "00000000-0000-0000-0000-000000000000"
#}
